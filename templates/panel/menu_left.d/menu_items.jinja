{%- from "lib/left_menu_style.jinja" import 
            menu_bar_styles, 
            menu_bar_dynamic_styles,
            menu_bar_active_styles,
            with context %}

{%- set left_menu = {} %}
{%- set plugins = data.get( "plugins" , {} ) %}

{%- for _ , plugin in plugins.items() %}
{%-     set plugin_catagory = plugin.get( "catagory" ) %}
{%-     set _update = left_menu.update( { plugin_catagory: {} } ) %}
{%- endfor %}
{%- set catagories = catagories | unique %}

{%- for _ , plugin in plugins.items() %}
{%-     set plugin_name = plugin.get( "name", "" ) %}
{%-     set plugin_catagory = plugin.get( "catagory" ) %}
{%-     for key , value in plugin.items() %}
{%-         set _update = left_menu[ plugin_catagory ].update( { plugin_name: plugin } ) %}
{%-     endfor %}
{%- endfor %}

{%- for catagory , plugins in left_menu.items() %}
{%-     set catagory_id = "%s_%s" | format( panel_id , catagory ) %}
    <button type="button" id="{{ catagory_id }}" class="menu_catagory">{{ catagory }}</button>
    <div id="{{ catagory_id }}" class="menu_plugins" style="display: block">
{%-     for plugin , yaml_file in plugins.items() %}
{%-         set plugin_id = "%s_%s" | format( catagory_id , plugin ) %}
        <div id="{{ plugin_id }}" class="menu_plugin">
{{          plugin}}
        </div>
{%-     endfor %}
    </div>
{%- endfor %}

{#- Scripts #}
<script>
{#- Scripts for set menu item style #}
{%- for classname , style in menu_bar_styles.items() %}
let {{ classname }} = document.getElementsByClassName( "{{ classname }}" );
for( const element of {{ classname }} ){
{%-     for attribute , value in style.items() %}
    element.style.{{ attribute }} = "{{ value }}";
{%-     endfor %}
};
{%- endfor %}


{#- Scripts to set dynamic style on menu items #}
{%- for classname , js_event_style in menu_bar_dynamic_styles.items() %}
let {{ classname }}_dynamic = document.getElementsByClassName( "{{ classname }}" );
for( const element of {{ classname }}_dynamic ){
{%-     for js_event , dynamic_style in js_event_style.items() %}
    element.{{ js_event }} = function(){
{%-          for attribute , value in dynamic_style.items() %}
        if ( ! element.classList.contains( "active") ){
            element.style.{{ attribute }} = "{{ value }}";
        }
{%-         endfor %}
    } 
{%-     endfor %}
};
{%- endfor %}


{#- Script for menu item collapsing #}
let menu_catagories = document.getElementsByClassName( "menu_catagory" );
for ( let e = 0 ; e < menu_catagories.length ; e++ ){
    menu_catagories[ e ].addEventListener( "click" , function(){
        let content = this.nextElementSibling;
            if( content.style.display === "block" ){
                content.style.display = "none";
            } else {
            content.style.display = "block";
            }
        let all_catagories = document.getElementsByClassName( "menu_catagory" );
        for ( let i = 0 ; i <  all_catagories.length; i++ ){
            let current_catagory = all_catagories[ i ];
            if ( current_catagory.classList.contains( "active" ) === true && e !== i ){
                console.log( `off ${i}` );
                current_catagory.classList.toggle( "active" );
                console.log( `${i} ${current_active}` );
            } else if ( e === i ) {
                console.log( `toggle ${i}` );
                current_catagory.classList.toggle( "active" );
                current_active = current_catagory.classList.contains( "active" );
                console.log( `${i} ${current_active}` );
            }
            {#- Toggle off if collapsing #}
            if( 
                content.style.display === "none" 
                &&
                e === i
                &&
                current_catagory.classList.contains( "active" )
                ){
                current_catagory.classList.toggle( "active" );
            }
            let is_active = current_catagory.classList.contains( "active" );
            if ( is_active ){
{%- set catagory_active_styles = menu_bar_active_styles.get( "menu_catagory" , {} ) %}
{%- for attribute , value in catagory_active_styles.items() %}
                current_catagory.style.{{ attribute }} = "{{value}}";
{%- endfor %}
            } else {
{%- set catagory_styles = menu_bar_styles.get( "menu_catagory" , {} ) %}
{%- for attribute , value in catagory_styles.items() %}
                current_catagory.style.{{ attribute }} = "{{value}}";
{%- endfor %}
            }
        }
    });
}

{#- Script to handle onclick for menu_plugin items #}
let menu_plugin_all = document.getElementsByClassName( "menu_plugin" );
for ( let e = 0 ; e < menu_plugin_all.length ; e++ ){
    let current_menu_plugin = menu_plugin_all[ e ];
    let parent_menu_plugins = current_menu_plugin.parentElement;
    let parent_catagory = parent_menu_plugins.previousElementSibling;
    current_menu_plugin.addEventListener( "click" , function(){
        if ( ! this.classList.contains( "active" ) ){
            this.classList.toggle( "active" );
        }
        for ( let i = 0 ; i < menu_plugin_all.length ; i++ ){
            if ( e !== i ){
                let other_menu_plugin = menu_plugin_all[ i ];
                if( other_menu_plugin.classList.contains( "active" ) ){
                    other_menu_plugin.classList.toggle( "active" );
                }
            }
        }
        {#- Update active parents #}
        {#- Update style for active an inactive#}
        for ( let i = 0 ; i < menu_plugin_all.length ; i++ ){
            let update_menu_plugin = menu_plugin_all[ i ];
            let update_menu_plugin_active = update_menu_plugin.classList.contains( "active" );
            if ( update_menu_plugin_active ){
{%- set plugin_active_styles = menu_bar_active_styles.get( "menu_plugin" , {} ) %}
{%- for attribute , value in plugin_active_styles.items() %}
                update_menu_plugin.style.{{ attribute }} = "{{ value }}";
{%- endfor %}
            } else {
{%- set plugin_styles = menu_bar_styles.get( "menu_plugin" , {} ) %}
{%- for attribute , value in plugin_styles.items() %}
                update_menu_plugin.style.{{ attribute }} = "{{ value }}";
{%- endfor %}
            }
        }
    });
}


</script>